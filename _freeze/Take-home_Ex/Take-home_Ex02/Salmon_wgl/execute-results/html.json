{
  "hash": "0f3bdfe76db2c60e3bcca7b79864da9b",
  "result": {
    "markdown": "---\ntitle: \"Salmon_wgl\"\ndate-modified: \"2023-05-24\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2salmon_wgl_data <- fromJSON(\"data/salmon_wgl.json\")\n```\n:::\n\n\nData Wrangling\n\nExtracting the nodes\n\nThe code chunk is used to extract nodes data table from mc2_data list object and save the output in a tibble data frame object called mc2_nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2salmon_wgl_nodes <- as_tibble(mc2salmon_wgl_data$nodes) %>%\n  select(id, shpcountry, rcvcountry)\n```\n:::\n\n\n\nExtracting the edges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2salmon_wgl_edges <- as_tibble(mc2salmon_wgl_data$links) %>%\n  mutate(ArrivalDate = ymd(arrivaldate)) %>%\n  mutate(Year = year(ArrivalDate)) %>%\n  select(source, target, ArrivalDate, Year, hscode, valueofgoods_omu) %>% \n  distinct()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhscodes_filtered <- c(\"302100\", \"304100\", \"303100\", \"303910\", \"160414\",\"305400\", \"305200\", \"306130\", \"306170\", \"306230\",\"306190\", \"160520\", \"307110\", \"307990\", \"307190\", \"160550\")\n\nmc2salmon_wgl_edges_aggregated <- mc2salmon_wgl_edges %>%\n  #filter(substr(as.character(hscode), 1, 4) %in% hscodes_filtered) %>%\n  #filter(hscode %in% hscodes_filtered) %>%\n  group_by(source, target, hscode, Year) %>%\n    summarise(weights = n()) %>%\n  filter(source!=target) %>%\n  filter(weights > 1) %>%\n  ungroup()\n```\n:::\n\n\nPreparing nodes data\n\nInstead of using the nodes data table extracted from mc2_data, we will prepare a new nodes data table by using the source and target fields of mc2_edges_aggregated data table. This is necessary to ensure that the nodes in nodes data tables include all the source and target values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid1 <- mc2salmon_wgl_edges_aggregated %>%\n  select(source) %>%\n  rename(id = source)\nid2 <- mc2salmon_wgl_edges_aggregated %>%\n  select(target) %>%\n  rename(id = target)\nmc2salmon_wgl_nodes_extracted <- rbind(id1, id2) %>%\n  distinct()\n```\n:::\n\n\n\nBuilding the tidy graph data model\n\nThe following code chunk is used\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2salmon_wgl_graph <- tbl_graph(nodes = mc2salmon_wgl_nodes_extracted,\n                       edges = mc2salmon_wgl_edges_aggregated,\n                       directed = TRUE)\n\nmc2salmon_wgl_graph\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 6 nodes and 3 edges\n#\n# A rooted forest with 3 trees\n#\n# A tibble: 6 × 1\n  id                                       \n  <chr>                                    \n1 David Limited Liability Company Worldwide\n2 French Crab S.p.A. Worldwide             \n3 Uttar Pradesh s CJSC                     \n4 Belgian Cod BV Solutions                 \n5 Saltwater Supreme ОАО Forwading          \n6 Océano de Coral Corporation Express      \n#\n# A tibble: 3 × 5\n   from    to hscode  Year weights\n  <int> <int>  <int> <dbl>   <int>\n1     1     4  30475  2034       2\n2     2     5 841810  2034       4\n3     3     6 950510  2034       2\n```\n:::\n:::\n\n\nVisualising the network graph\n\nThe following code chunk is used to plot the network graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(mc2salmon_wgl_graph,\n       layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes()) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](Salmon_wgl_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(mc2salmon_wgl_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = id, \n                      size = 8))\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Salmon_wgl_files/figure-html/unnamed-chunk-9-1.png){width=1728}\n:::\n:::\n\n\n\nIn-betweeness check\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- mc2salmon_wgl_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=weights), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = id,\n            size=betweenness_centrality))\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Salmon_wgl_files/figure-html/unnamed-chunk-10-1.png){width=1728}\n:::\n:::\n\n\n\n\nInteractive Network Diagram\n\nBefore we can plot the interactive network graph, we need to prepare the data model by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2salmon_wgl_edges_aggregated <- mc2salmon_wgl_edges %>%\n  left_join(mc2salmon_wgl_nodes, by = c(\"source\" = \"id\")) %>%\n  rename(from = source) %>%\n  left_join(mc2salmon_wgl_nodes, by = c(\"target\" = \"id\")) %>%\n  rename(to = target) %>%\n  #filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n```\n:::\n\n\n\n\n\n\n\n#Testing\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate a continuous color palette with 400 colors\nnum_colors <- 6\ncolor_palette <- colorRampPalette(c(\"red\", \"blue\"))(num_colors)\n\n# Assign colors to the \"color\" attribute in the node data\nmc2salmon_wgl_nodes_extracted$color <- color_palette\n\n# Plot the network with different colors for nodes\nvisNetwork(mc2salmon_wgl_nodes_extracted, mc2salmon_wgl_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-d3fea5f269d3efa8340f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d3fea5f269d3efa8340f\">{\"x\":{\"nodes\":{\"id\":[\"David Limited Liability Company Worldwide\",\"French Crab S.p.A. Worldwide\",\"Uttar Pradesh s CJSC\",\"Belgian Cod BV Solutions\",\"Saltwater Supreme ОАО Forwading\",\"Océano de Coral Corporation Express\"],\"color\":[\"#FF0000\",\"#CC0033\",\"#990066\",\"#650099\",\"#3200CC\",\"#0000FF\"],\"x\":[0.912022060317874,0.407626552833178,-1,0.27889757810089,1,-0.959249345541888],\"y\":[-0.715016974262305,1,-0.24838443620368,-1,0.651858616426627,0.384739834468469],\"label\":[\"David Limited Liability Company Worldwide\",\"French Crab S.p.A. Worldwide\",\"Uttar Pradesh s CJSC\",\"Belgian Cod BV Solutions\",\"Saltwater Supreme ОАО Forwading\",\"Océano de Coral Corporation Express\"]},\"edges\":{\"from\":[\"David Limited Liability Company Worldwide\",\"French Crab S.p.A. Worldwide\",\"Uttar Pradesh s CJSC\"],\"to\":[\"Belgian Cod BV Solutions\",\"Saltwater Supreme ОАО Forwading\",\"Océano de Coral Corporation Express\"],\"weight\":[2,5,5]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"physics\":{\"stabilization\":false},\"layout\":{\"randomSeed\":123}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"igraphlayout\":{\"type\":\"square\"},\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":true,\"position\":\"left\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::",
    "supporting": [
      "Salmon_wgl_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\r\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}